namespace? package.collections.primitive_array;


/// | pointer(4) | length(4) | item(size) | item(size)
structure PrimitiveArray<T> {
    private pointer: Offset,
    private length: usize,
}


extends PrimitiveArray<T> {
    get(self, nth: Offset): PrimitiveEntry<T> {
        assert(nth != 0 && nth <= length, "Out of bounds error")
        new PrimitiveEntry(size_of::<usize> * 2 + size_of::<T> * (nth - 1))
    }
    size(self): usize {
        size_of::<usize> * 3
    }
    heap_size(self): usize {
        size_of::<T> * self.capacity
    }

    get(mut self)

}